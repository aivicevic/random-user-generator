buildscript {
    ext.kotlinVersion = '1.3.41'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Constants
ext {
    // SDK and Tools
    minSdkVersion = 21
    compileSdkVersion = 28
    targetSdkVersion = 28

    /*********************
     * AndroidX Versions
     *********************/
    // Architecture
    roomVersion = '2.0.0'

    // Lifecycle
    lifecycleVersion = '2.1.0-alpha04'

    // Support
    appCompatVersion = '1.0.0'
    constraintLayoutVersion = '1.1.2'
    recyclerViewVersion = '1.0.0'

    // Testing
    coreTestVersion = '1.0.0'
    coreArchTestVersion = '2.0.0'
    runnerVersion = '1.1.0'
    rulesVersion = '1.1.0'
    junitExtVersion = '1.0.0'
    truthExtVersion = '1.1.0'
    orchestratorVersion = '1.1.0'
    espressoVersion = '3.1.0'

    // TODO: Android KTX

    /***********************
     * Third-Party Versions
     ***********************/
    // Support
    materialVersion = '1.1.0-alpha09'

    // Dependency Injection
    daggerVersion = '2.16'

    // RxJava
    rxJavaVersion = '2.1.15'
    rxAndroidVersion = '2.0.2'

    // Network
    retrofitVersion = '2.4.0'
    okhttpVersion = '3.11.0'

    // Image Loading
    glideVersion = '4.2.0'

    // Testing
    mockitoVersion = '2.7.22'
    mockitoKtVersion = '2.1.0'
    hamcrestVersion = '1.3'
    googleTruthVersion = '0.43'

    /**********************
     * AndroidX Artifacts
     **********************/
    androidx = [
        lifecycle: [
            runtime   : "androidx.lifecycle:lifecycle-runtime:$lifecycleVersion",
            extensions: "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion",
            compiler  : "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
        ],
        room: [
            runtime : "androidx.room:room-runtime:$roomVersion",
            rxJava  : "androidx.room:room-rxjava2:$roomVersion",
            compiler: "androidx.room:room-compiler:$roomVersion"
        ],
        support: [
            appCompat       : "androidx.appcompat:appcompat:$appCompatVersion",
            constraintLayout: "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            recyclerView    : "androidx.recyclerview:recyclerview:$recyclerViewVersion"
        ],
        testing: [
            core        : "androidx.test:core:$coreTestVersion",
            coreArch    : "androidx.arch.core:core-testing:$coreArchTestVersion",
            runner      : "androidx.test:runner:$runnerVersion",
            rules       : "androidx.test:rules:$rulesVersion",
            jUnitExt    : "androidx.test.ext:junit:$junitExtVersion",
            truthExt    : "androidx.test.ext:truth:$truthExtVersion",
            orchestrator: "androidx.test:orchestrator:$orchestratorVersion",
            espresso    : "androidx.test.espresso:espresso-core:$espressoVersion"
        ]
    ]

    /************************
     * Third-Party Artifacts
     ************************/
    dagger = [
        dagger          : "com.google.dagger:dagger:$daggerVersion",
        compiler        : "com.google.dagger:dagger-compiler:$daggerVersion",
        android         : "com.google.dagger:dagger-android:$daggerVersion",
        androidSupport  : "com.google.dagger:dagger-android-support:$daggerVersion",
        androidProcessor: "com.google.dagger:dagger-android-processor:$daggerVersion"
    ]

    rx = [
        rxJava   : "io.reactivex.rxjava2:rxjava:$rxJavaVersion",
        rxAndroid: "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    ]

    retrofit = [
        retrofit      : "com.squareup.retrofit2:retrofit:$retrofitVersion",
        rxJavaAdapter : "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion",
        moshiConverter: "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    ]

    okhttp = [
        okhttp            : "com.squareup.okhttp3:okhttp:$okhttpVersion",
        loggingInterceptor: "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    ]

    testing = [
        mockito    : "org.mockito:mockito-core:$mockitoVersion",
        mockitoKt  : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKtVersion",
        googleTruth: "com.google.truth:truth:$googleTruthVersion"
    ]
}
