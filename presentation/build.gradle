apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion project.compileSdkVersion
    defaultConfig {
        applicationId "com.randomusers"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Modules
    implementation project(':data')
    implementation project(':domain')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$project.kotlinVersion"

    // Support
    implementation androidx.support.appCompat
    implementation androidx.support.constraintLayout
    implementation androidx.support.recyclerView
    implementation "com.google.android.material:material:$project.materialVersion"

    // Architecture Components
    implementation androidx.lifecycle.extensions
    implementation androidx.room.runtime
    kapt androidx.room.compiler

    // Dependency Injection
    implementation dagger.dagger
    implementation dagger.android
    implementation dagger.androidSupport
    kapt dagger.compiler
    kapt dagger.androidProcessor
    compileOnly 'org.glassfish:javax.annotation:3.1.1'

    // RxJava
    implementation rx.rxJava
    implementation rx.rxAndroid

    // Network
    implementation okhttp.okhttp
    implementation okhttp.loggingInterceptor
    implementation retrofit.retrofit
    implementation retrofit.rxJavaAdapter
    implementation retrofit.moshiConverter

    // Glide
    implementation "com.github.bumptech.glide:glide:$project.glideVersion"

    // Testing - TODO: Clean-up unnecessary dependencies when test coverage is complete
    testImplementation androidx.testing.core
    testImplementation androidx.testing.coreArch
    testImplementation androidx.testing.rules
    testImplementation androidx.testing.jUnitExt
    testImplementation androidx.testing.truthExt
    testImplementation testing.mockito
    testImplementation testing.mockitoKt
    testImplementation testing.googleTruth
    androidTestImplementation androidx.testing.runner
    androidTestImplementation androidx.testing.espresso
    androidTestUtil androidx.testing.orchestrator
}
